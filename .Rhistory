library(tidyverse)
library(gridExtra)
white_wine <- read.csv('wineQualityWhites.csv')
red_wine <- read.csv('wineQualityReds.csv')
white_wine <- dplyr::select(white_wine, -c(free.sulfur.dioxide, X))
red_wine <- dplyr::select(red_wine, -c(free.sulfur.dioxide, X))
red_wine <- red_wine %>%
mutate(color = 0) #red is 0
white_wine <- white_wine %>%
mutate(color = 1) #white is 1
#add quality_cat
red_wine <- red_wine %>%
mutate(quality_cat = ifelse(quality>=7, 1, 0)) #high quality 1, low quality 0
white_wine <- white_wine %>%
mutate(quality_cat = ifelse(quality>=7, 1, 0)) #high quality 1, low quality 0
#change color to factor
red_wine$color<-factor(red_wine$color)
levels(red_wine$color) <- c('red')
white_wine$color<-factor(white_wine$color)
levels(white_wine$color) <- c('white')
#change quality_cat to factor
red_wine$quality_cat<-factor(red_wine$quality_cat)
levels(red_wine$quality_cat) <- c("low","high")
white_wine$quality_cat<-factor(white_wine$quality_cat)
levels(white_wine$quality_cat) <- c("low","high")
wine_combined <- rbind(white_wine, red_wine) #combine datasets
#split into train and test data
set.seed(1) #set seed
#white
sample_white<-sample.int(nrow(white_wine), floor(.80*nrow(white_wine)), replace = F)
train_white<-white_wine[sample_white, ] #training data
test_white<-white_wine[-sample_white, ] #testing data
#red
sample_red<-sample.int(nrow(red_wine), floor(.80*nrow(red_wine)), replace = F)
train_red<-red_wine[sample_red, ] #training data
test_red<-red_wine[-sample_red, ]
#combined
train_combined <- rbind(train_white, train_red)
test_combined <- rbind(test_white, test_red)
setwd("~/UVA Data Science Masters/Summer 2021/STAT-6021_project2")
library(ggplot2)
library(tidyverse)
library(gridExtra)
white_wine <- read.csv('wineQualityWhites.csv')
red_wine <- read.csv('wineQualityReds.csv')
white_wine <- dplyr::select(white_wine, -c(free.sulfur.dioxide, X))
red_wine <- dplyr::select(red_wine, -c(free.sulfur.dioxide, X))
red_wine <- red_wine %>%
mutate(color = 0) #red is 0
white_wine <- white_wine %>%
mutate(color = 1) #white is 1
#add quality_cat
red_wine <- red_wine %>%
mutate(quality_cat = ifelse(quality>=7, 1, 0)) #high quality 1, low quality 0
white_wine <- white_wine %>%
mutate(quality_cat = ifelse(quality>=7, 1, 0)) #high quality 1, low quality 0
#change color to factor
red_wine$color<-factor(red_wine$color)
levels(red_wine$color) <- c('red')
white_wine$color<-factor(white_wine$color)
levels(white_wine$color) <- c('white')
#change quality_cat to factor
red_wine$quality_cat<-factor(red_wine$quality_cat)
levels(red_wine$quality_cat) <- c("low","high")
white_wine$quality_cat<-factor(white_wine$quality_cat)
levels(white_wine$quality_cat) <- c("low","high")
wine_combined <- rbind(white_wine, red_wine) #combine datasets
#split into train and test data
set.seed(1) #set seed
#white
sample_white<-sample.int(nrow(white_wine), floor(.80*nrow(white_wine)), replace = F)
train_white<-white_wine[sample_white, ] #training data
test_white<-white_wine[-sample_white, ] #testing data
#red
sample_red<-sample.int(nrow(red_wine), floor(.80*nrow(red_wine)), replace = F)
train_red<-red_wine[sample_red, ] #training data
test_red<-red_wine[-sample_red, ]
#combined
train_combined <- rbind(train_white, train_red)
test_combined <- rbind(test_white, test_red)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(gridExtra)
library(corrplot)
library(ROCR)
#train_combined <- read.csv("training_data.csv")
#test_combined <- read.csv("testing_data.csv")
corrplot(cor(train_combined[, c(-12, -13)]), method="color")
corrplot(cor(train_red[, c(-12, -13)]), method="color")
corrplot(cor(train_white[, c(-12, -13)]), method="color")
ggplot(data=train_combined, aes(x=fixed.acidity, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Fixed Acidity and Color")
ggplot(data=train_combined, aes(x=volatile.acidity, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Volatile Acidity and Color")
ggplot(data=train_combined, aes(x=citric.acid, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Citric Acid Acidity and Color")
ggplot(data=train_combined, aes(x=residual.sugar, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Residual Sugar and Color")
ggplot(data=train_combined, aes(x=chlorides, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Chlorides and Color")
ggplot(data=train_combined, aes(x=total.sulfur.dioxide, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Sulfur Dioxide and Color")
ggplot(data=train_combined, aes(x=pH, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by pH and Color")
ggplot(data=train_combined, aes(x=sulphates, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Sulphates and Color")
ggplot(data=train_combined, aes(x=alcohol, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Alcohol and Color")
ggplot(data=train_combined, aes(x=quality_cat, y=fixed.acidity, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Fixed Acidity on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=volatile.acidity, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Volatile Acidity on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=citric.acid, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Citric Acid on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=residual.sugar, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Residual Sugar on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=chlorides, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Chlorides on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=total.sulfur.dioxide, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Sulfur Dioxide on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=density, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Density on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=pH, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of pH on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=sulphates, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Sulphates on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=alcohol, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Alcohol on Quality, by Color")
pairs(reds_train[, c(-12, -13)], lower.panel=NULL)
pairs(reds_train[, c(-12, -13)], lower.panel=NULL)
pairs(train_red[, c(-12, -13)], lower.panel=NULL)
pairs(train_white[, c(-12, -13)], lower.panel=NULL)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(gridExtra)
library(corrplot)
library(ROCR)
white_wine <- read.csv('wineQualityWhites.csv')
red_wine <- read.csv('wineQualityReds.csv')
white_wine <- dplyr::select(white_wine, -c(free.sulfur.dioxide, X))
red_wine <- dplyr::select(red_wine, -c(free.sulfur.dioxide, X))
red_wine <- red_wine %>%
mutate(color = 0) #red is 0
white_wine <- white_wine %>%
mutate(color = 1) #white is 1
#add quality_cat
red_wine <- red_wine %>%
mutate(quality_cat = ifelse(quality>=7, 1, 0)) #high quality 1, low quality 0
white_wine <- white_wine %>%
mutate(quality_cat = ifelse(quality>=7, 1, 0)) #high quality 1, low quality 0
#change color to factor
red_wine$color<-factor(red_wine$color)
levels(red_wine$color) <- c('red')
white_wine$color<-factor(white_wine$color)
levels(white_wine$color) <- c('white')
#change quality_cat to factor
red_wine$quality_cat<-factor(red_wine$quality_cat)
levels(red_wine$quality_cat) <- c("low","high")
white_wine$quality_cat<-factor(white_wine$quality_cat)
levels(white_wine$quality_cat) <- c("low","high")
wine_combined <- rbind(white_wine, red_wine) #combine datasets
#split into train and test data
set.seed(1) #set seed
#white
sample_white<-sample.int(nrow(white_wine), floor(.80*nrow(white_wine)), replace = F)
train_white<-white_wine[sample_white, ] #training data
test_white<-white_wine[-sample_white, ] #testing data
#red
sample_red<-sample.int(nrow(red_wine), floor(.80*nrow(red_wine)), replace = F)
train_red<-red_wine[sample_red, ] #training data
test_red<-red_wine[-sample_red, ]
#combined
train_combined <- rbind(train_white, train_red)
test_combined <- rbind(test_white, test_red)
corrplot(cor(train_combined[, c(-12, -13)]), method="color")
corrplot(cor(train_red[, c(-12, -13)]), method="color")
corrplot(cor(train_white[, c(-12, -13)]), method="color")
ggplot(data=train_combined, aes(x=fixed.acidity, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Fixed Acidity and Color")
ggplot(data=train_combined, aes(x=volatile.acidity, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Volatile Acidity and Color")
ggplot(data=train_combined, aes(x=citric.acid, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Citric Acid Acidity and Color")
ggplot(data=train_combined, aes(x=residual.sugar, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Residual Sugar and Color")
ggplot(data=train_combined, aes(x=chlorides, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Chlorides and Color")
ggplot(data=train_combined, aes(x=total.sulfur.dioxide, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Sulfur Dioxide and Color")
ggplot(data=train_combined, aes(x=pH, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by pH and Color")
ggplot(data=train_combined, aes(x=sulphates, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Sulphates and Color")
ggplot(data=train_combined, aes(x=alcohol, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Alcohol and Color")
ggplot(data=train_combined, aes(x=quality_cat, y=fixed.acidity, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Fixed Acidity on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=volatile.acidity, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Volatile Acidity on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=citric.acid, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Citric Acid on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=residual.sugar, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Residual Sugar on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=chlorides, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Chlorides on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=total.sulfur.dioxide, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Sulfur Dioxide on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=density, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Density on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=pH, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of pH on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=sulphates, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Sulphates on Quality, by Color")
ggplot(data=train_combined, aes(x=quality_cat, y=alcohol, color=color))+
geom_boxplot()+
facet_wrap(~color)+
labs(title="Differences in the Effect of Alcohol on Quality, by Color")
pairs(train_red[, c(-12, -13)], lower.panel=NULL)
pairs(train_white[, c(-12, -13)], lower.panel=NULL)
plt1 <- ggplot(data = red_wine, aes(y=quality)) +
geom_histogram(fill='indianred1', color='indianred4', alpha=0.75)
plt2 <- ggplot(data = white_wine, aes(y=quality)) +
geom_histogram(fill='lightgoldenrod1', color='lightgoldenrod4', alpha=0.75)
grid.arrange(plt1, plt2, ncol=2)
plt1 <- ggplot(data = red_wine, aes(y=quality)) +
geom_histogram(fill='indianred1', color='indianred4', alpha=0.75)
plt2 <- ggplot(data = white_wine, aes(y=quality)) +
geom_histogram(fill='lightgoldenrod1', color='lightgoldenrod4', alpha=0.75)
grid.arrange(plt1, plt2, ncol=2)
sd(white_wine$quality)
sd(red_wine$quality)
mean(white_wine$quality)
mean(red_wine$quality)
t.test(white_wine$quality, red_wine$quality, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(white_wine$quality, red_wine$quality, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
is.na(white_wine)
is.na(white_wine).sum()
sum(is.na(white_wine))
sum(is.na(red_wine))
dplyr::count(train_red, quality_cat, sort = TRUE)
173/(1106+173)
dplyr::count(train_white, quality_cat, sort = TRUE)
838/(3080+838)
ggplot(data=train_combined, aes(x=fixed.acidity, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Fixed Acidity and Color")
ggplot(data=train_combined, aes(x=volatile.acidity, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Volatile Acidity and Color")
ggplot(data=train_combined, aes(x=citric.acid, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Citric Acid Acidity and Color")
ggplot(data=train_combined, aes(x=residual.sugar, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Residual Sugar and Color")
ggplot(data=train_combined, aes(x=chlorides, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Chlorides and Color")
ggplot(data=train_combined, aes(x=total.sulfur.dioxide, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Sulfur Dioxide and Color")
ggplot(data=train_combined, aes(x=pH, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by pH and Color")
ggplot(data=train_combined, aes(x=sulphates, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Sulphates and Color")
ggplot(data=train_combined, aes(x=alcohol, y=quality, color=color))+
geom_point(alpha=0.3)+
geom_smooth(method='lm')+
labs(title="Quality by Alcohol and Color")
corrplot(cor(train_red[, c(-12, -13)]), method="color")
corrplot(cor(train_white[, c(-12, -13)]), method="color")
corrplot(cor(train_red[, c(-12, -13)]), method="color", title = "Red Wine Correlations")
corrplot(cor(train_white[, c(-12, -13)]), method="color", title="White Wine Correlations")
corrplot(cor(train_red[, c(-12, -13)]), method="color", title = "Red Wine Correlations")
corrplot(cor(train_white[, c(-12, -13)]), method="color", title="White Wine Correlations")
par(oma=c(0,0,2,0))
corrplot(cor(train_red[, c(-12, -13)]), method="color", title = "Red Wine Correlations")
corrplot(cor(train_white[, c(-12, -13)]), method="color", title="White Wine Correlations")
par(oma=c(0,0,2,0))
corrplot(cor(train_red[, c(-12, -13)]), method="color", title = "Red Wine Correlations", outer=T)
corrplot(cor(train_white[, c(-12, -13)]), method="color", title="White Wine Correlations")
#par(oma=c(0,0,2,0))
corrplot(cor(train_red[, c(-12, -13)]), method="color", title = "Red Wine Correlations", outer=T)
corrplot(cor(train_white[, c(-12, -13)]), method="color", title="White Wine Correlations", outer=T)
par(oma=c(0,0,2,0))
corrplot(cor(train_red[, c(-12, -13)]), method="color", title = "Red Wine Correlations", outer=T)
corrplot(cor(train_white[, c(-12, -13)]), method="color", title="White Wine Correlations", outer=T)
par(oma=c(0,0,2,0))
corrplot(cor(train_red[, c(-12, -13)]), method="color", title = "Red Wine Correlations", outer=T)
corrplot(cor(train_white[, c(-12, -13)]), method="color", title="White Wine Correlations", outer=T)
pairs(train_red[, c("fixed acidity", "pH", "density", "citric.acid", "quality")], lower.panel=NULL)
pairs(train_red[, c("fixed.acidity", "pH", "density", "citric.acid", "quality")], lower.panel=NULL)
#pairs(train_white[, c(-12, -13)], lower.panel=NULL)
pairs(train_red[, c("fixed.acidity", "pH", "density", "citric.acid", "quality")], lower.panel=NULL, title="Red Wine Scatterplots", outer=T)
pairs(train_white[, c("density", "residual.sugar", "alcohol", "quality")], lower.panel=NULL, title="White Wine Scatterplots", outer=T)
?pairs
par(oma=c(0,0,2,0))
corrplot(cor(train_red[, c(-12, -13)]), method="color", main = "Red Wine Correlations")
corrplot(cor(train_white[, c(-12, -13)]), method="color", title="White Wine Correlations", outer=T)
pairs(train_red[, c("fixed.acidity", "pH", "density", "citric.acid", "quality")], lower.panel=NULL, main="Red Wine Scatterplots")
pairs(train_white[, c("density", "residual.sugar", "alcohol", "quality")], lower.panel=NULL, title="White Wine Scatterplots", outer=T)
pairs(train_red[, c("fixed.acidity", "pH", "density", "citric.acid", "quality")], lower.panel=NULL, main="Red Wine Scatterplots")
pairs(train_white[, c("density", "residual.sugar", "alcohol", "quality")], lower.panel=NULL, main="White Wine Scatterplots")
setwd("~/UVA Data Science Masters/Summer 2021/STAT-6021_project2")
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(tidyverse)
library(gridExtra)
library(corrplot)
library(ROCR)
white_wine <- read.csv('wineQualityWhites.csv')
red_wine <- read.csv('wineQualityReds.csv')
white_wine <- dplyr::select(white_wine, -c(free.sulfur.dioxide, X))
red_wine <- dplyr::select(red_wine, -c(free.sulfur.dioxide, X))
red_wine <- red_wine %>%
mutate(color = 0) #red is 0
white_wine <- white_wine %>%
mutate(color = 1) #white is 1
#add quality_cat
red_wine <- red_wine %>%
mutate(quality_cat = ifelse(quality>=7, 1, 0)) #high quality 1, low quality 0
white_wine <- white_wine %>%
mutate(quality_cat = ifelse(quality>=7, 1, 0)) #high quality 1, low quality 0
#change color to factor
red_wine$color<-factor(red_wine$color)
levels(red_wine$color) <- c('red')
white_wine$color<-factor(white_wine$color)
levels(white_wine$color) <- c('white')
#change quality_cat to factor
red_wine$quality_cat<-factor(red_wine$quality_cat)
levels(red_wine$quality_cat) <- c("low","high")
white_wine$quality_cat<-factor(white_wine$quality_cat)
levels(white_wine$quality_cat) <- c("low","high")
wine_combined <- rbind(white_wine, red_wine) #combine datasets
#split into train and test data
set.seed(1) #set seed
#white
sample_white<-sample.int(nrow(white_wine), floor(.80*nrow(white_wine)), replace = F)
train_white<-white_wine[sample_white, ] #training data
test_white<-white_wine[-sample_white, ] #testing data
#red
sample_red<-sample.int(nrow(red_wine), floor(.80*nrow(red_wine)), replace = F)
train_red<-red_wine[sample_red, ] #training data
test_red<-red_wine[-sample_red, ]
#combined
train_combined <- rbind(train_white, train_red)
test_combined <- rbind(test_white, test_red)
train_red <- train_red %>% dplyr::select(-c(color, quality))
train_white <- train_white %>% dplyr::select(-c(color, quality))
white_wine <- read.csv('wineQualityWhites.csv')
red_wine <- read.csv('wineQualityReds.csv')
white_wine <- dplyr::select(white_wine, -c(free.sulfur.dioxide, X))
red_wine <- dplyr::select(red_wine, -c(free.sulfur.dioxide, X))
red_wine <- red_wine %>%
mutate(color = 0) #red is 0
white_wine <- white_wine %>%
mutate(color = 1) #white is 1
#add quality_cat
red_wine <- red_wine %>%
mutate(quality_cat = ifelse(quality>=7, 1, 0)) #high quality 1, low quality 0
white_wine <- white_wine %>%
mutate(quality_cat = ifelse(quality>=7, 1, 0)) #high quality 1, low quality 0
#change color to factor
red_wine$color<-factor(red_wine$color)
levels(red_wine$color) <- c('red')
white_wine$color<-factor(white_wine$color)
levels(white_wine$color) <- c('white')
#change quality_cat to factor
red_wine$quality_cat<-factor(red_wine$quality_cat)
levels(red_wine$quality_cat) <- c("low","high")
white_wine$quality_cat<-factor(white_wine$quality_cat)
levels(white_wine$quality_cat) <- c("low","high")
wine_combined <- rbind(white_wine, red_wine) #combine datasets
#split into train and test data
set.seed(1) #set seed
#white
sample_white<-sample.int(nrow(white_wine), floor(.80*nrow(white_wine)), replace = F)
train_white<-white_wine[sample_white, ] #training data
test_white<-white_wine[-sample_white, ] #testing data
#red
sample_red<-sample.int(nrow(red_wine), floor(.80*nrow(red_wine)), replace = F)
train_red<-red_wine[sample_red, ] #training data
test_red<-red_wine[-sample_red, ]
#combined
train_combined <- rbind(train_white, train_red)
test_combined <- rbind(test_white, test_red)
train_red <- train_red %>% dplyr::select(-c(color, quality))
train_white <- train_white %>% dplyr::select(-c(color, quality))
allreg_red <- regsubsets(quality_cat ~., data=train_red, nbest=1, nvmax=10)
library(MASS)
library(tidyverse)
library(gridExtra)
library(corrplot)
library(ROCR)
library(leaps)
allreg_red <- regsubsets(quality_cat ~., data=train_red, nbest=1, nvmax=10)
summary(allreg_red)
#R2
which.max(summary(allreg_red)$adjr2)
#model 9 is the best based on R2
#CP
which.min(summary(allreg_red)$cp)
#model 8 is the best based on Mallow's CP
#BIC
which.min(summary(allreg_red)$bic)
#model 7 based on BIC
#all possible regression model, based on BIC -> 7-predictor model
model1_red <- glm(quality_cat~ alcohol+volatile.acidity+sulphates+fixed.acidity+density+residual.sugar+chlorides,
family='binomial', data=train_red)
summary(model1_red) #AIC score 738.12
probabilities <- predict(model1_red, type = "response")
predicted.classes <- ifelse(probabilities > 0.5, "pos", "neg")
head(predicted.classes)
model_red <- train_red%>%
dplyr::select(is.numeric)
predictors <- colnames(model_red)
#Bind the logit and tidying the data for plot
model_red <- model_red %>%
mutate(logit = log(probabilities/(1-probabilities))) %>%
gather(key = "predictors", value = "predictor.value", -logit)
ggplot(model_red, aes(logit, predictor.value))+
geom_point(size = 0.5, alpha = 0.5) +
geom_smooth(method = "loess") +
theme_bw() +
facet_wrap(~predictors, scales = "free_y")
